apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        applicationIdSuffix ".dagger"

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
    }

    testOptions {
        unitTests {
            // For Robolectric. See: http://robolectric.org/getting-started/
            includeAndroidResources = true
        }
    }

    packagingOptions {
        exclude '/META-INF/*.kotlin_module'
        exclude '**/*.kotlin_builtins'
        exclude '**/*.kotlin_metadata'
    }

    dynamicFeatures = [":dagger_sample_feature"]
}

dependencies {
    implementation project(':component')
    implementation project(':viewmodel')
    implementation project(':savedstate')
    kapt project(':savedstate-compiler')
    implementation project(':lifecycle')
    implementation project(':okhttp')
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlinCoroutines}"
    implementation "androidx.appcompat:appcompat:${versions.androidxAppcompat}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.androidxConstraintlayout}"
    implementation "androidx.fragment:fragment-ktx:${versions.androidxFragment}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.androidxLifecycle}"
    implementation "androidx.room:room-ktx:${versions.androidxRoom}"
    kapt "androidx.room:room-compiler:${versions.androidxRoom}"
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.google.dagger:dagger:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"

    debugRuntimeOnly project(':component-debug')

    testImplementation project(':component-test-mockk')
    testImplementation project(':viewmodel-test-mockk')
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.kotlinCoroutines}"
    testImplementation "androidx.test:runner:${versions.androidxTestRunner}"
    testImplementation "androidx.test.ext:junit:${versions.androidxTestJunit}"
    testImplementation "androidx.test.espresso:espresso-core:${versions.androidxTestEspresso}"
    testImplementation "io.mockk:mockk:${versions.mockk}"
    testImplementation "org.robolectric:robolectric:${versions.robolectric}"
}
